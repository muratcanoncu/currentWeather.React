{"version":3,"sources":["context/Context.js","Components/template.js","Components/weatherInfo.js","Components/background.jpeg","Components/container.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","initialState","cityName","dataBase","dataLoaded","reducer","state","action","type","payload","ContextProvider","props","useReducer","myState","dispatch","useEffect","fetch","then","data","json","cod","Provider","value","contextState","contextDispatch","children","template","style","color","marginTop","marginBottom","country","description","fontSize","grad","display","justifyContent","alignItems","width","margin","highest","lowest","wind","weatherInfo","context","useContext","flexDirection","height","paddingTop","placeholder","borderRadius","border","onChange","e","target","marginLeft","padding","cursor","fontWeight","onClick","showWeather","map","city","name","sys","weather","main","temp","toFixed","temp_max","temp_min","speed","id","container","paddingBottom","backgroundImage","Background","backgroundRepeat","backgroundSize","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.922fd22d.chunk.js","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nconst UserContext = React.createContext();\nconst initialState = {\n  cityName: \"\",\n  dataBase: [],\n  dataLoaded: false,\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"CITY_ENTERED\":\n      return {\n        ...state,\n        cityName: action.payload,\n      };\n    case \"CITY_SEARCHED\":\n      return {\n        ...state,\n        dataLoaded: true,\n      };\n    case \"CITY_WEATHER\":\n      return {\n        ...state,\n        dataBase: [action.payload],\n      };\n    case \"NOCITY_WEATHER\":\n      return {\n        ...state,\n        dataBase: [],\n        dataLoaded: false,\n      };\n    default:\n      return state;\n  }\n};\nexport function ContextProvider(props) {\n  const [myState, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${myState.cityName}&appid=e6297ad1e1f3b7a35b749ff2967e9270`\n    )\n      .then((data) => data.json())\n      .then((data) => {\n        if (data.cod == \"404\") {\n          dispatch({\n            type: \"NOCITY_WEATHER\",\n            payload: [],\n          });\n        } else {\n          dispatch({\n            type: \"CITY_WEATHER\",\n            payload: data,\n          });\n        }\n      });\n  }, [myState.cityName]);\n  // console.log(myState);\n  return (\n    <UserContext.Provider\n      value={{ contextState: myState, contextDispatch: dispatch }}\n    >\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n\nexport default UserContext;\n","import React from \"react\";\n\nfunction template(props) {\n  return (\n    <div style={{ color: \"white\", marginTop: \"70px\" }}>\n      <h1 style={{ marginBottom: \"30px\" }}>\n        {props.cityName} [{props.country}]\n      </h1>\n      <p>{props.description}</p>\n      <h1 style={{ fontSize: \"2.6rem\" }}>{props.grad}°</h1>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          width: \"125px\",\n          margin: \"0 auto\",\n          fontSize: \"1.3rem\",\n        }}\n      >\n        <p>H: {props.highest}° </p>\n\n        <div>L: {props.lowest}°</div>\n      </div>\n      <p style={{ fontSize: \"1.2rem\" }}>Wind: {props.wind} Km/H</p>\n    </div>\n  );\n}\n\nexport default template;\n","import React, { useState, useContext } from \"react\";\nimport UserContext from \"../context/Context\";\nimport TemplateCity from \"./template\";\nfunction weatherInfo() {\n  // const [city, setCity] = useState(\"\");\n  const context = useContext(UserContext);\n  // const cityName = (e) => {\n  //   setCity(e.target.value);\n  // };\n  const showWeather = (dispatch) => {\n    dispatch({\n      type: \"CITY_SEARCHED\",\n    });\n  };\n  // console.log(context.contextState);\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        height: \"45vh\",\n        paddingTop: \"140px\",\n        width: \"100%\",\n      }}\n    >\n      <div style={{ width: \"100%\" }}>\n        <input\n          type=\"text\"\n          placeholder=\"Please Enter A City Name\"\n          style={{\n            borderRadius: \"10px\",\n            border: \"none\",\n          }}\n          onChange={(e) => {\n            context.contextDispatch({\n              type: \"CITY_ENTERED\",\n              payload: e.target.value,\n            });\n          }}\n        ></input>\n        <button\n          style={{\n            marginLeft: \"20px\",\n            padding: \"8px 17px\",\n            borderRadius: \"10px\",\n            border: \"none\",\n            cursor: \"pointer\",\n            fontWeight: \"bolder\",\n          }}\n          onClick={() => showWeather(context.contextDispatch)}\n        >\n          SEARCH\n        </button>\n      </div>\n      {context.contextState.dataBase.map((city) => {\n        if (context.contextState.dataLoaded) {\n          // console.log(city);\n          return (\n            <TemplateCity\n              key={city.id}\n              cityName={city.name}\n              country={city.sys.country}\n              description={city.weather[0].description}\n              grad={(city.main.temp - 273.15).toFixed()}\n              highest={(city.main.temp_max - 273.15).toFixed()}\n              lowest={(city.main.temp_min - 273.15).toFixed()}\n              wind={city.wind.speed}\n            ></TemplateCity>\n          );\n        } else {\n          null;\n        }\n      })}\n    </div>\n  );\n}\n\nexport default weatherInfo;\n","export default __webpack_public_path__ + \"static/media/background.dec17bbf.jpeg\";","import React from \"react\";\nimport WeatherInfo from \"./weatherInfo\";\nimport Background from \"./background.jpeg\";\nfunction container() {\n  return (\n    <div\n      style={{\n        height: \"50vh\",\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingBottom: \"580px\",\n        backgroundImage: `url(${Background})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"100% 120vh\",\n      }}\n    >\n      <WeatherInfo></WeatherInfo>\n    </div>\n  );\n}\n\nexport default container;\n","import \"./App.css\";\nimport Container from \"./Components/container\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container></Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ContextProvider } from \"./context/Context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}